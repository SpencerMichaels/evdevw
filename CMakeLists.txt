cmake_minimum_required(VERSION 3.2)

if(CMAKE_SOURCE_DIR STREQUAL CMAKE_BINARY_DIR)
  message(FATAL_ERROR "\
Can't build here! Create a build directory outside of the source tree and \
call CMake from there.\
  ")
endif()

project(evdevw VERSION 1.0.0)

set(PROJECT_AUTHOR "Spencer Michaels")
set(PROJECT_AUTHOR_EMAIL "spencer@smichaels.net")

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

set(CPACK_PACKAGE_NAME ${PROJECT_NAME})
set(CPACK_PACKAGE_VENDOR ${PROJECT_AUTHOR})
set(CPACK_PACKAGE_VERSION_MAJOR ${PROJECT_VERSION_MAJOR})
set(CPACK_PACKAGE_VERSION_MINOR ${PROJECT_VERSION_MINOR})
set(CPACK_PACKAGE_VERSION_PATCH ${PROJECT_VERSION_PATCH})
set(CPACK_PACKAGE_VERSION ${CPACK_PACKAGE_VERSION_MAJOR}.${CPACK_PACKAGE_VERSION_MINOR}.${CPACK_PACKAGE_VERSION_PATCH})
set(CPACK_PACKAGE_DESCRIPTION_SUMMARY ${PROJECT_NAME})
set(CPACK_PACKAGE_FILE_NAME ${CPACK_PACKAGE_NAME}-${CPACK_PACKAGE_VERSION})
set(CPACK_SOURCE_PACKAGE_FILE_NAME ${CPACK_PACKAGE_FILE_NAME}-src)
set(CPACK_RESOURCE_FILE_LICENSE ${evdevw_SOURCE_DIR}/LICENSE)
set(CPACK_RESOURCE_FILE_README ${evdevw_SOURCE_DIR}/README.md)
set(CPACK_GENERATOR TGZ)
set(CPACK_SOURCE_GENERATOR TGZ)
set(CPACK_PACKAGING_INSTALL_DIRECTORY "evdevw-${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}")

include(CPack)

include(GNUInstallDirs)

if(NOT DEFINED INCLUDE_INSTALL_DIR)
  set(INCLUDE_INSTALL_DIR "${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_INCLUDEDIR}")
endif()

file(GLOB HEADERS include/evdevw/*.hpp)
file(GLOB EVENT_HEADERS include/evdevw/Event/*.hpp)

install(
        FILES ${HEADERS}
        COMPONENT ${PROJECT_NAME}
        DESTINATION ${INCLUDE_INSTALL_DIR}/evdevw
        PERMISSIONS OWNER_READ OWNER_WRITE GROUP_READ WORLD_READ
)

install(
        FILES ${EVENT_HEADERS}
        COMPONENT ${PROJECT_NAME}
        DESTINATION ${INCLUDE_INSTALL_DIR}/evdevw/Event
        PERMISSIONS OWNER_READ OWNER_WRITE GROUP_READ WORLD_READ
)

install(
        FILES include/evdevw.hpp
        COMPONENT ${PROJECT_NAME}
        DESTINATION ${INCLUDE_INSTALL_DIR}
        PERMISSIONS OWNER_READ OWNER_WRITE GROUP_READ WORLD_READ
)
